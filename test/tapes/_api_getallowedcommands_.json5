{
    meta: {
        createdAt: '2021-12-04T12:34:02.735Z',
        host: 'https://7d2d.csmm.app',
        resHumanReadable: true,
    },
    req: {
        headers: {
            accept: '*/*',
            'user-agent': 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)',
            'accept-encoding': 'gzip,deflate',
            connection: 'close',
        },
        url: '/api/getallowedcommands',
        method: 'GET',
        body: '',
    },
    res: {
        status: 200,
        headers: {
            server: [
                'nginx',
            ],
            date: [
                'Sat, 04 Dec 2021 12:34:02 GMT',
            ],
            'content-type': [
                'application/json; charset=utf-8',
            ],
            'content-length': [
                '33640',
            ],
            connection: [
                'close',
            ],
        },
        body: {
            commands: [
                {
                    command: 'admin',
                    description: 'Manage user permission levels',
                    help: "Set/get user permission levels. A level of 0 is maximum permission,\nusers without an explicitly set permission have a permission level of 1000.\nUsage:\n   admin add <name / entity id / platform + platform user id> <level> [displayname]\n   admin remove <name / entity / platform + platform user id>\n   admin addgroup <steam id> <level regular> <level mods> [displayname]\n   admin removegroup <steam id>\n   admin list\nTo use the add/remove sub commands with a name or entity ID the player has\nto be online, the variant with platform and platform ID can be used for currently offline\nusers too.\nDisplayname can be used to put a descriptive name to the ban list in addition\nto the user's platform ID. If used on an online user the player name is used by default.\nWhen adding groups you set two permission levels: The 'regular' level applies to\nnormal members of the group, the 'mods' level applies to moderators / officers of\nthe group.",
                },
                {
                    command: 'AdminSpeed',
                    description: 'AdminSpeed',
                    help: '',
                },
                {
                    command: 'ai',
                    description: 'AI commands',
                    help: 'AI commands:\nlatency - toggles drawing\npathlines - toggles drawing editor path lines\npathgrid - force grid update\nragdoll <force> <time>\nrage <speed> <time> - make all zombies rage (0 - 2, 0 stops) (seconds)\nsendnames - toggles admin clients receiving debug name info',
                },
                {
                    command: 'aiddebug',
                    description: 'Toggles AIDirector debug output.',
                    help: '',
                },
                {
                    command: 'audio',
                    description: 'Watch audio stats',
                    help: 'Just type audio and hit enter for the info.\n',
                },
                {
                    command: 'automove',
                    description: 'Player auto movement',
                    help: 'Parameters:\nx z angle - move by x (left/right) and z (forward) and turn by angle per second',
                },
                {
                    command: 'ban',
                    description: 'Manage ban entries',
                    help: 'Set/get ban entries. Bans will be automatically lifted after the given time.\nUsage:\n   ban add <name / entity id / platform + platform user id> <duration> <duration unit> [reason] [displayname]\n   ban remove <name / entity id / platform + platform user id>\n   ban list\nTo use the add/remove sub commands with a name or entity ID the player has\nto be online, the variant with platform and platform ID can be used for currently offline\nusers too.\nDuration unit is a modifier to the duration which specifies if in what unit\nthe duration is given. Valid units:\n    minute(s), hour(s), day(s), week(s), month(s), year(s)\nDisplayname can be used to put a descriptive name to the ban list in addition\nto the user\'s platform ID. If used on an online user the player name is used by default.\nExample: ban add madmole 2 minutes "Time for a break" "Joel"',
                },
                {
                    command: 'bents',
                    description: 'Switches block entities on/off',
                    help: 'Use on or off or only the command to toggle',
                },
                {
                    command: 'buff',
                    description: 'Applies a buff to the local player',
                    help: '',
                },
                {
                    command: 'buffplayer',
                    description: 'Apply a buff to a player',
                    help: 'Usage:\n   buffplayer <player name / steam id / entity id> <buff name>\nApply the given buff to the player given by the player name or entity id (as given by e.g. "lpi").',
                },
                {
                    command: 'camera',
                    description: 'Lock/unlock camera movement or load/save a specific camera position',
                    help: "Usage:\n   1. cam save <name> [comment]\n   2. cam load <name>\n   3. cam list\n   4. cam lock\n   5. cam unlock\n1. Save the current player's position and camera view or the camera position\nand view if in detached mode under the given name. Optionally a more descriptive\ncomment can be supplied.\n2. Load the position and direction with the given name. If in detached camera\nmode the camera itself will be adjusted, otherwise the player will be teleported.\n3. List the saved camera positions.\n4/5. Lock/unlock the camera rotation. Can also be achieved with the \"Lock Camera\" key,\ncurrently bound to ''.",
                },
                {
                    command: 'chunkcache',
                    description: 'shows all loaded chunks in cache',
                    help: '',
                },
                {
                    command: 'chunkobserver',
                    description: 'Place a chunk observer on a given position.',
                    help: 'Usage:\n  1. chunkobserver add <x> <z> [size]\n  2. chunkobserver remove <x> <z>\n  3. chunkobserver list\n1. Place an observer on the chunk that contains the coordinate x/z.\n   Optionally specifying the box radius in chunks, defaulting to 1.\n2. Remove the observer from the chunk with the coordinate, if any.\n3. List all currently placed observers',
                },
                {
                    command: 'chunkreset',
                    description: 'resets the specified chunks',
                    help: 'Usage:\n  1. chunkreset <x1> <z1> <x2> <z2>\n  2. chunkreset [f]\n1. Rebuilds the chunks that contain the given coordinate range.\n2. Can only be executed by a player in the ingame console! Behaviour depends on whether the\n   player is currently within the bounds of a POI:\n   Within a POI: The POI is reset.\n   Not within a POI: The chunk the player is in and the eight chunks around that one are\n     rebuilt. Not deco! Does not reload POI data!\n   d - regen deco\n   f - fully regenerates chunks (may cause double entities!)',
                },
                {
                    command: 'clearJunkDroneData',
                    description: 'clears the player junkDrone data.',
                    help: '',
                },
                {
                    command: 'commandpermission',
                    description: 'Manage command permission levels',
                    help: 'Set/get permission levels required to execute a given command. Default\nlevel required for commands that are not explicitly specified is 0.\nUsage:\n   cp add <command> <level>\n   cp remove <command>\n   cp list',
                },
                {
                    command: 'creativemenu',
                    description: 'enables/disables the creativemenu',
                    help: '',
                },
                {
                    command: 'debuff',
                    description: 'Removes a buff from the local player',
                    help: '',
                },
                {
                    command: 'debuffplayer',
                    description: 'Remove a buff from a player',
                    help: 'Usage:\n   debuffplayer <player name / steam id / entity id> <buff name>\nRemove the given buff from the player given by the player name or entity id (as given by e.g. "lpi").',
                },
                {
                    command: 'debugmenu',
                    description: 'enables/disables the debugmenu ',
                    help: '',
                },
                {
                    command: 'debugshot',
                    description: "Usage:\n  debugshot [save perks]\nLets you make a screenshot that will have some generic info\non it and a custom text you can enter. Also stores a list\nof your current perk levels in a CSV file next to it if the\noptional parameter 'save perks' is set to true",
                    help: '',
                },
                {
                    command: 'debugweather',
                    description: 'Dumps internal weather state to the console.',
                    help: '',
                },
                {
                    command: 'decomgr',
                    description: '',
                    help: '',
                },
                {
                    command: 'dms',
                    description: 'Gives control over Dynamic Music functionality.',
                    help: 'No commands available for dms at the moment.',
                },
                {
                    command: 'dof',
                    description: 'Control DOF',
                    help: '',
                },
                {
                    command: 'Dynamic mesh',
                    description: 'Dynamic mesh',
                    help: '',
                },
                {
                    command: 'Dynamic mesh debug',
                    description: 'Dynamic mesh debug',
                    help: '',
                },
                {
                    command: 'enablerendering',
                    description: 'enable/disable live map rendering',
                    help: '',
                },
                {
                    command: 'exhausted',
                    description: 'Makes the player exhausted.',
                    help: '',
                },
                {
                    command: 'exportcurrentconfigs',
                    description: 'Exports the current game config XMLs',
                    help: 'Exports all game config XMLs as they are currently used (including applied\npatches from mods) to the folder "Configs" in the save folder of the game.\nIf run from the main menu it exports the XUi configs for the menu, if run\nfrom a game session will export all others.',
                },
                {
                    command: 'exportprefab',
                    description: 'Exports a prefab from a world area',
                    help: "Usage:\n  exportprefab <name> <x1> <y1> <z1> <x2> <y2> <z2> [part]\nExports a prefab with the given name from a box defined by the coordinate pair of two corners\nIf the optional parameter 'part' is 'true' it will export into the 'Parts' subfolder of the prefabs folder",
                },
                {
                    command: 'floatingorigin',
                    description: '',
                    help: '',
                },
                {
                    command: 'fov',
                    description: 'Camera field of view',
                    help: '',
                },
                {
                    command: 'gameevent',
                    description: 'usage: gameevent eventname',
                    help: '',
                },
                {
                    command: 'gamestage',
                    description: 'Shows the gamestage of the local player',
                    help: '',
                },
                {
                    command: 'getgamepref',
                    description: 'Gets game preferences',
                    help: 'Get all game preferences or only those matching a given substring',
                },
                {
                    command: 'getgamestat',
                    description: 'Gets game stats',
                    help: 'Get all game stats or only those matching a given substring',
                },
                {
                    command: 'getlogpath',
                    description: 'Get the path of the logfile the game currently writes to',
                    help: '',
                },
                {
                    command: 'getoptions',
                    description: 'Gets game options',
                    help: 'Get all game options on the local game',
                },
                {
                    command: 'gettime',
                    description: 'Get the current game time',
                    help: '',
                },
                {
                    command: 'gfx',
                    description: 'Graphics commands',
                    help: 'Graphics commands:\naf <value> - anisotropic filtering off, on or force on (0, 1, 2)\ndr <scale> <min> <max> - set dynamic res scale (0 auto, .1 to 1 force, -1 for off) and min/max FPS\ndt <value> - toggle distant terrain or set value (0 or 1)\ndti <value> - set distant terrain instancing (0 or 1)\ndtmaxlod <value> - set distant terrain max LOD (0 to 5)\ndtpix <value> - set distant terrain pixel error (1 to 200)\ngraph # - 0 removes all graphs, 1+ sets graphs height\ngraph cvar <name> <count> <max> - show graph of a cvar with line count (0 hides) and max graph value (default is 1)\ngraph dr <count> - show dynamic res graph with line count (0 hides)\ngraph fps <count> <fps max> - show fps graph with line count (0 hides) and max graph fps\ngraph pe <name> <count> <max> - show graph of a passive effect (healthmax..) with line count (0 hides) and max graph value (default is 1)\ngraph stat <name> <count> <max> - show graph of a stat (health, stamina..) with line count (0 hides) and max graph value (default is 1)\ngraph tex <name> <count> - show texture graph (mem, stream) with line count (0 hides)\nkey name <value> - set shader keyword (0 or 1)\npp name <value> - set postprocessing name (enable, ambientOcclusion (ao), auto exposure (ae), bloom, colorGrading (cg), etc.) to value (0 or 1)\nres <width> <height> - set screen resolution\nskin <value> - set skin bone count (1, 2, 4, 5+ (all))\nst name <value> - set streaming name (budget (0 disables), discard, forceload, reduction) to value\ntex - show texture info\ntexlimit <value> - set limit (0-x)',
                },
                {
                    command: 'give',
                    description: 'give an item to a player (entity id or name)',
                    help: 'Give an item to a player by dropping it in front of that player\nUsage:\n   give <name / entity id> <item name> <amount>\n   give <name / entity id> <item name> <amount> <quality>\nEither pass the full name of a player or his entity id (given by e.g. "lpi").\nItem name has to be the exact name of an item as listed by "listitems".\nAmount is the number of instances of this item to drop (as a single stack).\nQuality is the quality of the dropped items for items that have a quality.',
                },
                {
                    command: 'givequest',
                    description: 'usage: givequest questname',
                    help: '',
                },
                {
                    command: 'giveself',
                    description: 'usage: giveself itemName [qualityLevel=6] [count=1] [putInInventory=false] [spawnWithMods=true]',
                    help: '',
                },
                {
                    command: 'giveselfxp',
                    description: 'usage: giveselfxp 10000',
                    help: 'Give yourself experience\nUsage:\n   giveselfxp <number> [1 (use xp bonuses)]',
                },
                {
                    command: 'help',
                    description: 'Help on console and specific commands',
                    help: 'Usage:\n  1. help\n  2. help * <searchstring>\n  3. help <command name>\n1. Show general help and list all available commands\n2. List commands where either the name or the description contains the given text\n3. Show help for the given command',
                },
                {
                    command: 'kick',
                    description: 'Kicks user with optional reason. "kick playername reason"',
                    help: '',
                },
                {
                    command: 'kickall',
                    description: 'Kicks all users with optional reason. "kickall reason"',
                    help: '',
                },
                {
                    command: 'kill',
                    description: 'Kill a given entity',
                    help: 'Kill a given entity.\nUsage:\n   1. kill <entity id>\n   2. kill <player name / steam id>\n1. can be used to kill any entity that can be killed (zombies, players).\n2. can only be used to kill players.',
                },
                {
                    command: 'killall',
                    description: 'Kill all entities',
                    help: 'Kills all matching entities (but never players)\nUsage:\n   killall (all enemies)\n   killall alive (all EntityAlive types except vehicles and turrets)\n   killall all (all types)',
                },
                {
                    command: 'listgameobjects',
                    description: 'List all active game objects',
                    help: '',
                },
                {
                    command: 'lights',
                    description: 'Light debugging',
                    help: 'Light debugging:\nv - toggle viewer enable\noff - viewer lights off\non - viewer lights on\nclearreg - clear registered\ndisableall - \nenableall - \nlod - toggle viewer LODs\nlist - list all lights\nlistfile - list all lights to Lights.txt\nliste - list lights effecting the player position',
                },
                {
                    command: 'listents',
                    description: 'lists all entities',
                    help: '',
                },
                {
                    command: 'listitems',
                    description: 'lists all items that contain the given substring',
                    help: 'List all available item names\nUsage:\n   1. listitems <searchString>\n   2. listitems *\n1. List only names that contain the given string.\n2. List all names.',
                },
                {
                    command: 'listknownplayers',
                    description: 'lists all players that were ever online',
                    help: 'Usage:\n  1. listknownplayers\n  2. listknownplayers -online\n  3. listknownplayers -notbanned\n  4. listknownplayers <player name / userid>\n1. Lists all players that have ever been online\n2. Lists only the players that are currently online\n3. Lists only the players that are not banned\n4. Lists all players whose name contains the given string or matches the given UserID',
                },
                {
                    command: 'listlandprotection',
                    description: 'lists all land protection blocks and owners',
                    help: 'Usage:\n  1. listlandprotection summary\n  2. listlandprotection <user id / player name / entity id> [parseable]\n  3. listlandprotection nearby [length]\n1. Lists only players that own claimstones, the number they own and the protection status\n2. Lists only the claims of the player given by his UserID / entity id / playername, including the individual claim positions.\n   If "parseable" is specified the output of the individual claims will be in a format better suited for programmatical readout.\n3. Lists claims in a square with edge length of 64 (or the optionally specified size) around the executing player\n',
                },
                {
                    command: 'listplayerids',
                    description: 'Lists all players with their IDs for ingame commands',
                    help: '',
                },
                {
                    command: 'listplayers',
                    description: 'lists all players',
                    help: '',
                },
                {
                    command: 'listthreads',
                    description: 'lists all threads',
                    help: '',
                },
                {
                    command: 'loggamestate',
                    description: 'Log the current state of the game',
                    help: 'Writes information on the current state of the game (like memory usage,\nentities) to the log file. The section will use the message parameter\nin its header.\nUsage:\n   loggamestate <message> [true/false]\nMessage is a string that will be included in the header of the generated\nlog section. The optional boolean parameter specifies if this command\nshould be run on the client (true) instead of the server (false) which\nis the default.',
                },
                {
                    command: 'loglevel',
                    description: 'Telnet/Web only: Select which types of log messages are shown',
                    help: 'Select which types of log messages are shown on the connection\nyou enter this command. By default all log messages are printed\non every connection.\nUsage: loglevel <loglevel name> <true/false>\nLog levels: INF, WRN, ERR, EXC or ALL\nExample: Disable display of WRN messages: loglevel WRN false',
                },
                {
                    command: 'mapdata',
                    description: 'Writes some map data to an image',
                    help: 'Usage:\n  1. mapdata\n  2. mapdata start',
                },
                {
                    command: 'mem',
                    description: 'Prints memory information and unloads resources or changes garbage collector',
                    help: 'Commands:\nclean - cleanup memory pools\npools - list memory pools\ngc - show GC info\ngc alloc <value> - allocate k value of temp memory\ngc c - run collection\ngc enable <value> - enable GC (0 or 1)\ngc inc <value> - run incremental collect for value ms\ngc inctime <value> - set incremental collect time in ms\nobj [mode] - list object pool (active or all)\nobjs - shrink object pool\nlog [interval] - start/stop logging of performance data to a file',
                },
                {
                    command: 'memcl',
                    description: 'Prints memory information on client and calls garbage collector',
                    help: 'Commands:\nclean - cleanup memory pools\npools - list memory pools\ngc - show GC info\ngc alloc <value> - allocate k value of temp memory\ngc c - run collection\ngc enable <value> - enable GC (0 or 1)\ngc inc <value> - run incremental collect for value ms\ngc inctime <value> - set incremental collect time in ms\nobj [mode] - list object pool (active or all)\nobjs - shrink object pool\nlog [interval] - start/stop logging of performance data to a file',
                },
                {
                    command: 'networkclient',
                    description: 'Client side network commands',
                    help: 'Commands:\nlatencysim <min> <max> - sets simulation in millisecs (0 min disables)\npacketlosssim <chance> - sets simulation in percent (0 - 50)',
                },
                {
                    command: 'networkserver',
                    description: 'Server side network commands',
                    help: 'Commands:\nlatencysim <min> <max> - sets simulation in millisecs (0 min disables)\npacketlosssim <chance> - sets simulation in percent (0 - 50)',
                },
                {
                    command: 'newave',
                    description: 'Test new HD stuff.',
                    help: 'Usage:\n  1. newave\n',
                },
                {
                    command: 'occlusion',
                    description: 'Control OcclusionManager',
                    help: '',
                },
                {
                    command: 'openiddebug',
                    description: 'enable/disable OpenID debugging',
                    help: '',
                },
                {
                    command: 'pirs',
                    description: 'tbd',
                    help: 'tbd',
                },
                {
                    command: 'placeblockrotations',
                    description: 'Places all rotations of the currently held block',
                    help: 'Places the block you currently hold in your hand in all supported rotations. Starts\nat the current selection box and spreads out towards the right relative to the\ncurrent view direction of the player. Spaces out each block by 1m meter.',
                },
                {
                    command: 'placeblockshapes',
                    description: 'Places all shapes of the currently held variant helper block',
                    help: 'Places all variants of the helper block you currently hold in your hand. Starts\nat the current selection box and spreads out towards the right relative to the\ncurrent view direction of the player, starting a new row behind those every\n25 blocks. Spaces out each block by 1m meter.',
                },
                {
                    command: 'pois',
                    description: 'Switches distant POIs on/off',
                    help: 'Use on or off or only the command to toggle',
                },
                {
                    command: 'pplist',
                    description: 'Lists all PersistentPlayer data',
                    help: '',
                },
                {
                    command: 'prefab',
                    description: 'Prefab commands',
                    help: 'Prefab commands:\nclear\nexport\nmerge\nload\nsave\nthumbnail\ndensity <match density> <set density> - set density of non air blocks that match',
                },
                {
                    command: 'prefabupdater',
                    description: '',
                    help: "Update prefabs for newer game builds.\nUsage:\n   1. prefabupdater loadxml <xmlfile>\n   2. prefabupdater clearxml\n   3. prefabupdater createmapping <prefabname>\n   4. prefabupdater loadtable [nametablefile]\n   5. prefabupdater unloadtables\n   6. prefabupdater updateblocks\n\n1. Load a blocks.xml that has the information about the prefabs to be\n   updated. If you have a modded XML first load that modded XML and\n   afterwards load the XML provided with the game for legacy prefabs.\n   The xmlfile-parameter can either be relative to the game's base\n   directory or an absolute path (for pre-Alpha 17 prefabs).\n2. Unload the data loaded with loadxml.\n3. Create a block mapping file for the given prefab(s). Accepts '*' as\n   wildcard (for pre-Alpha 17 prefabs).\n4. Load a block name mapping file. File path is relative to the game\n   directory if not specified as absolute path. If no file is given the\n   default file supplied with the game is loaded (BlockUpdates.csv). \n5. Unload the data loaded with loadtable.\n6. Update the block mappings in prefabs with the block name mapping table loaded by 4.",
                },
                {
                    command: 'profilenetwork',
                    description: 'Writes network profiling information',
                    help: '',
                },
                {
                    command: 'profiling',
                    description: 'Enable Unity profiling for 300 frames',
                    help: '',
                },
                {
                    command: 'reloadentityclasses, rec',
                    description: 'reloads entityclasses xml data.',
                    help: '',
                },
                {
                    command: 'reloadwebpermissions',
                    description: 'force reload of web permissions file',
                    help: '',
                },
                {
                    command: 'removelandprotection',
                    description: 'removes the association of a land protection block to the owner',
                    help: 'Usage:  1. removelandprotection <userid>\n  2. removelandprotection <x> <y> <z>\n  3. removelandprotection nearby [length]\n1. Remove all land claims owned by the user with the given UserID\n2. Remove only the claim block on the exactly given block position\n3. Remove all claims in a square with edge length of 64 (or the optionally specified size) around the executing player',
                },
                {
                    command: 'removequest',
                    description: 'usage: removequest questname',
                    help: '',
                },
                {
                    command: 'rendermap',
                    description: 'render the current map to a file',
                    help: '',
                },
                {
                    command: 'repairchunkdensity',
                    description: 'check and optionally fix densities of a chunk',
                    help: 'This command is used to check if the densities of blocks in a chunk match the actual block type.\nIf there is a mismatch it can lead to the chunk rendering incorrectly or not at all, typically\nindicated by the error message "Failed setting triangles. Some indices are referencing out of\nbounds vertices.". It can also fix such mismatches within a chunk.\nUsage:\n  1. repairchunkdensity <x> <z>\n  2. repairchunkdensity <x> <z> fix\n1. Just checks the chunk and prints mismatched to the server log. x and z are the coordinates of any\n   block within the chunk to check.\n2. Repairs any mismatch found in the chunk.',
                },
                {
                    command: 'reply',
                    description: 'send a message to  the player who last sent you a PM',
                    help: 'Usage:\n   reply <message>\nSend the given message to the user you last received a PM from.',
                },
                {
                    command: 'resetallstats',
                    description: 'Resets all Steam achievement stats (and achievements when parameter is true)',
                    help: '',
                },
                {
                    command: 'saveworld',
                    description: 'Saves the world manually.',
                    help: '',
                },
                {
                    command: 'say',
                    description: 'Sends a message to all connected clients',
                    help: '',
                },
                {
                    command: 'sayplayer',
                    description: 'send a message to a single player',
                    help: 'Usage:\n   pm <player name / steam id / entity id> <message>\nSend a PM to the player given by the player name or entity id (as given by e.g. "lpi").',
                },
                {
                    command: 'ScreenEffect',
                    description: 'Sets a screen effect',
                    help: 'ScreenEffect [name] [intensity] [fade time]\nScreenEffect clear\nScreenEffect reload',
                },
                {
                    command: 'setgamepref',
                    description: 'sets a game pref',
                    help: '',
                },
                {
                    command: 'setgamestat',
                    description: 'sets a game stat',
                    help: '',
                },
                {
                    command: 'settargetfps',
                    description: 'Set the target FPS the game should run at (upper limit)',
                    help: 'Set the target FPS the game should run at (upper limit).\nUsage:\n  1. settargetfps\n  2. settargetfps <fps>\n1. gets the current target FPS.\n2. sets the target FPS to the given integer value, 0 disables the FPS limiter.',
                },
                {
                    command: 'settempunit',
                    description: 'Set the current temperature units.',
                    help: 'Set the current temperature units.\nUsage:\n  1. settempunit F\n  2. settempunit C\n1. sets the temperature unit to Fahrenheit.\n2. sets the temperature unit to Celsius.\n',
                },
                {
                    command: 'settime',
                    description: 'Set the current game time',
                    help: 'Set the current game time.\nUsage:\n  1. settime day\n  2. settime night\n  3. settime <time>\n  4. settime <day> <hour> <minute>\n1. sets the time to day 1, 12:00 pm.\n2. sets the time to day 2, 12:00 am.\n3. sets the time to the given value. 1000 is one hour.\n4. sets the time to the given day/hour/minute values.',
                },
                {
                    command: 'show',
                    description: 'Shows custom layers of rendering.',
                    help: '',
                },
                {
                    command: 'showalbedo',
                    description: 'enables/disables display of albedo in gBuffer',
                    help: '',
                },
                {
                    command: 'showchunkdata',
                    description: 'shows some date of the current chunk',
                    help: '',
                },
                {
                    command: 'showClouds',
                    description: 'Artist command to show one layer of clouds.',
                    help: 'type "showClouds myCloudTexture" where "myCloudTexture" is the name of the texture you want to see.\ntype "showClouds" to turn off this view.\nNote: cloud textures MUST be locasted at ./resources/textures/environment/spectrums/default\n',
                },
                {
                    command: 'showhits',
                    description: 'Show hit entity locations',
                    help: '',
                },
                {
                    command: 'showinventory',
                    description: 'list inventory of a given player',
                    help: 'Usage:\n   showinventory <user id / player name / entity id> [tag]\nShow the inventory of the player given by his UserID, player name or\nentity id (as given by e.g. "lpi").\nOptionally specify a tag that is included in each line of the output. In\nthis case output is designed to be easily parseable by tools.\nNote: This only shows the player\'s inventory after it was first sent to\nthe server which happens at least every 30 seconds.',
                },
                {
                    command: 'shownexthordetime',
                    description: 'Displays the wandering horde time',
                    help: '',
                },
                {
                    command: 'shownormals',
                    description: 'enables/disables display of normal maps in gBuffer',
                    help: '',
                },
                {
                    command: 'showspecular',
                    description: 'enables/disables display of specular values in gBuffer',
                    help: '',
                },
                {
                    command: 'showswings',
                    description: 'Show melee swing arc rays',
                    help: '',
                },
                {
                    command: 'showtriggers',
                    description: 'Sets the visibility of the block triggers.',
                    help: '',
                },
                {
                    command: 'shutdown',
                    description: 'shuts down the game',
                    help: '',
                },
                {
                    command: 'sleeper',
                    description: 'Show sleeper info',
                    help: '',
                },
                {
                    command: 'sleeperreset',
                    description: 'Show sleeper info',
                    help: '',
                },
                {
                    command: 'smoothworldall',
                    description: 'Applies some batched smoothing commands.',
                    help: 'Usage:\n  1. smoothworldall [passes] [noregion]\n  2. smoothworldall <worldname> [passes] [noregion]\nArguments:\n  passes: Integer number, overriding the default of 5 passes\n  noregion: If passed in literally it will write the resulting heightmap\n            to the dtm.raw instead of updating all of the worlds region files\n  worldname: If specified the command is applied to the given world instead of the currently loaded world',
                },
                {
                    command: 'spawnairdrop',
                    description: 'Spawns an air drop',
                    help: '',
                },
                {
                    command: 'spawnentity',
                    description: 'spawns an entity',
                    help: '',
                },
                {
                    command: 'spawnentityat',
                    description: 'Spawns an entity at a give position',
                    help: 'Usage:\n  1. spawnentityat\n  2. spawnentityat <entityidx> <x> <y> <z>\n  3. spawnentityat <entityidx> <x> <y> <z> <count>\n  4. spawnentityat <entityidx> <x> <y> <z> <count> <rotX> <rotY> <rotZ>\n  5. spawnentityat <entityidx> <x> <y> <z> <count> <rotX> <rotY> <rotZ> <stepX> <stepY> <stepZ>\n  6. spawnentityat <entityidx> <x> <y> <z> <count> <rotX> <rotY> <rotZ> <stepX> <stepY> <stepZ> <spawnerType>\n1. Lists the known entity class names\n2. Spawns the entity with the given class name at the given coordinates\n3. As 2. but spawns <count> instances of that entity type\n4. As 3. but also specifies the rotation of the spawned entities\n5. As 4. but also specify the step distance between entities\n6. As 5. but also specify the spawner source of the entity (Dynamic, StaticSpawner, Biome)',
                },
                {
                    command: 'spawnscouts',
                    description: 'Spawns zombie scouts',
                    help: 'Spawn scouts near a player.Usage:\n   1. spawnscouts\n   2. spawnscouts <player name/steam id/entity id>\n   3. spawnscouts <x> <y> <z>\n1. Will spawn the scouts near the issuing player. Can only be used by a player, not a remote console.\n2. Spawn scouts near the given player.\n3. Spawn scouts at the given coordinates.',
                },
                {
                    command: 'SpawnScreen',
                    description: 'Display SpawnScreen',
                    help: 'SpawnScreen on/off',
                },
                {
                    command: 'spawnsupplycrate',
                    description: 'Spawns a supply crate where the player is',
                    help: '',
                },
                {
                    command: 'spawnwanderinghorde',
                    description: 'Spawns a wandering horde of zombies',
                    help: '',
                },
                {
                    command: 'spectatormode',
                    description: 'enables/disables spectator mode',
                    help: '',
                },
                {
                    command: 'spectrum',
                    description: 'Force a particular lighting spectrum.',
                    help: 'spectrum <Auto, Biome, BloodMoon, Foggy, Rainy, Stormy, Snowy>\n',
                },
                {
                    command: 'stab',
                    description: 'stability',
                    help: '',
                },
                {
                    command: 'starve',
                    description: 'Makes the player starve (optionally specify the amount of food you want to have in percent).',
                    help: '',
                },
                {
                    command: 'switchview',
                    description: 'Switch between fpv and tpv',
                    help: '',
                },
                {
                    command: 'SystemInfo',
                    description: 'List SystemInfo',
                    help: '',
                },
                {
                    command: 'teleport',
                    description: 'Teleport the local player',
                    help: 'Usage:\n  1. teleport <x> <y> <z> [view direction]\n  2. teleport <x> <z> [view direction]\n  3. teleport <target steam id / player name / entity id>\n  4. teleport offset <inc x> <inc y> <inc z>\nFor 1. and 2.: view direction is an optional specifier to select the direction you want to look into\nafter teleporting. This can be either of n, ne, e, se, s, sw, w, nw or north, northeast, etc.\n1. Teleports the local player to the specified location. Use y = -1 to spawn on ground.\n2. Same as 1 but always spawn on ground.\n3. Teleports to the location of the given player\n4. Teleport the local player to the position calculated by his current position and the given offsets',
                },
                {
                    command: 'teleportplayer',
                    description: 'Teleport a given player',
                    help: 'Usage:\n  1. teleportplayer <user id / player name / entity id> <x> <y> <z> [view direction]\n  2. teleportplayer <user id / player name / entity id> <target user id / player name / entity id>\n1. Teleports the player given by his UserID, player name or entity id (as given by e.g. "lpi")\n   to the specified location. Use y = -1 to spawn on ground. Optional argument view direction\n   allows you to speify a direction you want to look in after teleporting. This can be either\n   of n, ne, e, se, s, sw, w, nw or north, northeast, etc.\n2. As 1, but destination given by another (online) player',
                },
                {
                    command: 'testDismemberment',
                    description: 'Dismemberment testing toggled.',
                    help: '',
                },
                {
                    command: 'testloop',
                    description: 'Test code in a loop',
                    help: 'Commands:\np - player',
                },
                {
                    command: 'thirsty',
                    description: 'Makes the player thirsty (optionally specify the amount of water you want to have in percent).',
                    help: '',
                },
                {
                    command: 'tppoi',
                    description: '',
                    help: '',
                },
                {
                    command: 'traderarea',
                    description: '...',
                    help: '...',
                },
                {
                    command: 'trees',
                    description: 'Switches trees on/off',
                    help: 'trees - toggles\ntrees <value> - (off, on)',
                },
                {
                    command: 'twitch',
                    description: 'usage: twitch <command> <params>',
                    help: '',
                },
                {
                    command: 'updatelighton',
                    description: 'Commands for UpdateLightOnAllMaterials and UpdateLightOnPlayers',
                    help: 'Commands for UpdateLightOnAllMaterials and UpdateLightOnPlayers',
                },
                {
                    command: 'version',
                    description: 'Get the currently running version of the game and loaded mods',
                    help: '',
                },
                {
                    command: 'visitmap',
                    description: 'Visit an given area of the map. Optionally run the density check on each visited chunk.',
                    help: 'Usage:\n  1. visitmap <x1> <z1> <x2> <z2> [check]\n  2. visitmap stop\n1. Start visiting the map in the rectangle specified with the two edges defined by\n   coordinate pairs x1/z1 and x2/z2. If the parameter "check" is added each visited\n   chunk will be checked for density issues.\n2. Stop the current visitmap run.',
                },
                {
                    command: 'water',
                    description: 'Control water settings',
                    help: 'water limit [value] - how many water flow updates can run at a time',
                },
                {
                    command: 'weather',
                    description: 'Control weather settings',
                    help: 'Clouds [0 to 1 (-1 defaults)]\nFog [density (-1 defaults)] [start] [end]\nFogColor [red (-1 defaults)] [green] [blue]\nRain [0 to 1 (-1 defaults)]\nWet [0 to 1 (-1 defaults)]\nSnow [0 to 1 (-1 defaults)]\nSnowFall [0 to 1 (-1 defaults)]\nTemp [-99 to 101 (< -99 defaults)]\nWind [0 to 200 (-1 defaults)]\nSimRand [0 to 1 (-1 defaults)]\nDefaults or d\n',
                },
                {
                    command: 'weathersurvival',
                    description: 'Enables/disables weather survival',
                    help: '',
                },
                {
                    command: 'webpermission',
                    description: 'Manage web permission levels',
                    help: 'Set/get permission levels required to access a given web functionality. Default\nlevel required for functions that are not explicitly specified is 0.\nUsage:\n   webpermission add <webfunction> <level>\n   webpermission remove <webfunction>\n   webpermission list',
                },
                {
                    command: 'webstat',
                    description: 'DEBUG PURPOSES ONLY',
                    help: '',
                },
                {
                    command: 'webtokens',
                    description: 'Manage web tokens',
                    help: 'Set/get webtoken permission levels. A level of 0 is maximum permission.\nUsage:\n   webtokens add <username> <usertoken> <level>\n   webtokens remove <username>\n   webtokens list',
                },
                {
                    command: 'whitelist',
                    description: 'Manage whitelist entries',
                    help: "Set/get whitelist entries. Note: If there is at least one entry on the list\nno user who is not on this list will be able to join the server!\nUsage:\n   whitelist add <name / entity id / platform + platform user id> [displayname]\n   whitelist remove <name / entity id / platform + platform user id>\n   whitelist addgroup <steam id> [displayname]\n   whitelist removegroup <steam id>\n   whitelist list\nTo use the add/remove sub commands with a name or entity ID the player has\nto be online, the variant with platform and platform ID can be used for currently offline\nusers too.\nDisplayname can be used to put a descriptive name to the ban list in addition\nto the user's platform ID. If used on an online user the player name is used by default.",
                },
                {
                    command: 'workstationmaterials',
                    description: 'Set material counts on workstations.',
                    help: 'Set the material count for the given material slot on the currently opened workstation\nto the given value.\nUsage:\n   wsmats <slot> <count>\nSlot specifies the index of the material slot in the workstation, e.g. 0 on forge is iron.Count defines to what you want to set the material count with a maximum of 30000.\n',
                },
                {
                    command: 'xui',
                    description: 'Execute XUi operations',
                    help: 'Usage:\n   xui open <window group name> [instance] [closeOthers]\n   xui close <window group name> [instance]\n   xui reload [window group name] [instance]\n   xui list <"instances" / "windows"> [instance]\n',
                },
            ],
        },
    },
}